# Starter pipeline
# Pull from Repo
# Import Project into Docekr SOAtest CLI container and Run
# Azure YAML docs:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Build Stage 
# Deploy Stage
# Test Stage
- script: |
    echo $(Build.Repository.Name) 
    echo "Starting Pipeline Execution."
    echo "Create ./tmp directory for volume mount."
    mkdir tmp
    echo ${PWD##*/}
    soatest.project = ${PWD##*/}
    echo "Copy SOAtest project contents to volume directory."
    cp -R . tmp/$(soatest.project)
    
    # Set Up and write .properties file
    echo  -e "\n~~~\nSetting up and creating soatestcli.properties file.\n"
    echo $"
    license.network.auth.enabled=true  
    license.network.password=$(license.server.password)
    license.network.url=$(license.server.url)
    license.network.use.specified.server=true
    license.network.user=admin
    soatest.license.network.edition=automation_edition
    soatest.license.use_network=true
    virtualize.license.network.edition=performance_server_edition
    virtualize.license.use_network=true" >> tmp/soatestcli.properties
    
    # Debug
    # echo -e "\nDebug -- Verify workspace contents.\n"
    # ls -Rla
    # echo -e "\nDebug -- Verify soatestcli.properties file contents."
    # cat tmp/soatestcli.properties

    # Run Docker container with mount and run tests
    echo -e "\n~~~\nRun SOAtestCLI Docker container & mount ./tmp volume.\n"
    
    # docker --version

    # Start and Run SOAtest Container with Import and Run Tests
    docker run -i \
    -u 0:0 \
    -e ACCEPT_EULA=true \
    -v "$(pwd)/tmp:/tmp" \
    parasoft/soavirt /bin/bash -c " \
    cat /tmp/soatestcli.properties; \
    soatestcli \
    -settings /tmp/soatestcli.properties \
    -import /tmp/$(soatest.project); \
    soatestcli \
    -resource /$(soatest.project) \
    -config 'user://Example Configuration' \
    -settings /tmp/soatestcli.properties \
    -report /tmp"
    
    # Debug
    # echo -e "\nDebug -- Verify ./tmp contents\n"
    # ls -R $(pwd)/tmp
  displayName: Run Tests
  env:
    pwd: $(Build.Repository.LocalPath)
  
# Publish Test Results
- task: PublishParasoftTestResults@1
  
  displayName: Publish SOAtest Test Results
  inputs:
    testRunner: 'SOAtest9x'
    testResultsFiles: '$(Build.Repository.LocalPath)/tmp/rep*.xml'